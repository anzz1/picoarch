diff --git a/platform/libretro/libretro.cpp b/platform/libretro/libretro.cpp
--- a/platform/libretro/libretro.cpp
+++ b/platform/libretro/libretro.cpp
@@ -216,7 +216,7 @@ EXPORT void retro_set_controller_port_device(unsigned port, unsigned device)
 
 EXPORT void retro_reset()
 {
-    _vm->QueueCartChange(_vm->CurrentCartFilename());
+    _vm->QueueCartReset();
 }
 
 static std::array<int, 7> buttons
diff --git a/source/p8GlobalLuaFunctions.h b/source/p8GlobalLuaFunctions.h
--- a/source/p8GlobalLuaFunctions.h
+++ b/source/p8GlobalLuaFunctions.h
@@ -135,8 +135,8 @@ unpack = table.unpack
 â–¥ = 0x5555.8
 
 function menuitem(index, label, callback)
-    --only 5 open slots
-    if index < 1 or index > 5 then return end
+    --only 7 open slots
+    if index < 1 or index > 7 then return end
 
     if not label or not callback then
         label = nil
@@ -147,12 +147,6 @@ function menuitem(index, label, callback)
     __f08_menu_items[index + 1][2] = callback
 end
 
-function __addbreadcrumb(label, carttoload)
-    __f08_menu_items[8] = {nil, nil}
-    __f08_menu_items[8][1] = label
-    __f08_menu_items[8][2] = function() load(carttoload) end
-end
-
 
 __f08_menu_items = {
     [0] = {"continue", __togglepausemenu},
@@ -161,30 +155,35 @@ __f08_menu_items = {
     {nil, nil},
     {nil, nil},
     {nil, nil},
-    {"reset cart", __resetcart},
-    {"exit to menu", __loadbioscart},
-    {"exit to settings", __loadsettingscart}
+    {nil, nil},
+    {nil, nil},
+    {"reset cart", __resetcart}
 }
 
 __f08_menu_selected = 0
 
 function __f08_menu_update()
-    if btnp(3) and __f08_menu_selected < #__f08_menu_items then
-        repeat
-            __f08_menu_selected = __f08_menu_selected + 1
-        until __f08_menu_items[__f08_menu_selected][1] ~= nil
-    end
+    if btnp(3) then
+        if __f08_menu_selected < #__f08_menu_items then
+            repeat
+                __f08_menu_selected = __f08_menu_selected + 1
+            until __f08_menu_items[__f08_menu_selected][1] ~= nil
+        else
+            __f08_menu_selected = 0
+        end
 
-    if btnp(2) and __f08_menu_selected > 1 then
-        repeat
-            __f08_menu_selected = __f08_menu_selected - 1
-        until __f08_menu_items[__f08_menu_selected][1] ~= nil
-    end
+    elseif btnp(2) then
+        if __f08_menu_selected > 1 then
+            repeat
+                __f08_menu_selected = __f08_menu_selected - 1
+            until __f08_menu_items[__f08_menu_selected][1] ~= nil
+        else
+		    __f08_menu_selected = #__f08_menu_items
+	    end
 
-    if btnp(0) or btnp(1) or btnp(4) or btnp(5) then
+    elseif btnp(0) or btnp(1) or btnp(4) or btnp(5) then
 		local bval = 0
 		local allowreturn = false
-		
 		if btnp(4) or btnp(5) then
 			bval = 16+32+64
 			allowreturn = true
@@ -196,17 +195,20 @@ function __f08_menu_update()
 			end
 			
 		end
-		
         toexec = __f08_menu_items[__f08_menu_selected]
         if toexec and toexec[2] then
             local toexec_result = toexec[2](bval)
-			
-            if __f08_menu_selected > 0 and __f08_menu_selected < 6 and allowreturn and not toexec_result then
+
+            if __f08_menu_selected > 0 and __f08_menu_selected < 8 and allowreturn and not toexec_result then
                 __f08_menu_selected = 0
                 __togglepausemenu()
             end
         end
-    end
+
+    elseif btnp(6) then
+        __f08_menu_selected = 0
+        __togglepausemenu()
+	end
 
 end
 
diff --git a/source/picoluaapi.cpp b/source/picoluaapi.cpp
--- a/source/picoluaapi.cpp
+++ b/source/picoluaapi.cpp
@@ -1339,7 +1339,7 @@ int togglepausemenu(lua_State *L) {
 }
 
 int resetcart(lua_State *L) {
-    _vmForLuaApi->QueueCartChange(_vmForLuaApi->CurrentCartFilename());
+    _vmForLuaApi->QueueCartReset();
 
     return 0;
 }
diff --git a/source/vm.cpp b/source/vm.cpp
--- a/source/vm.cpp
+++ b/source/vm.cpp
@@ -375,9 +375,11 @@ bool Vm::loadCart(Cart* cart) {
         }
     }
 
+#if 0
     if (_cartBreadcrumb.length() > 0) {
         ExecuteLua("__addbreadcrumb(\"" + _cartBreadcrumb +"\", \"" + _prevCartKey +"\")", "");
     }
+#endif
 
     _cartLoadError = "";
 
@@ -659,6 +661,12 @@ void Vm::QueueCartChange(const unsigned char* cartData, size_t size){
     _pauseMenu = false;
 }
 
+void Vm::QueueCartReset(){
+    if (_nextCartData != nullptr || _nextCartKey != "")
+    	_cartChangeQueued = true;
+    _pauseMenu = false;
+}
+
 int Vm::GetTargetFps() {
     return _targetFps;
 }
diff --git a/source/vm.h b/source/vm.h
--- a/source/vm.h
+++ b/source/vm.h
@@ -85,6 +85,7 @@ class Vm {
 
     void QueueCartChange(string newcart);
     void QueueCartChange(const unsigned char* cartData, size_t size);
+    void QueueCartReset();
 
     int GetTargetFps();
 
